import { Task } from "../../Entities/Task";
import { BaseArguments } from "../BaseArguments";

export class TaskUpdatingArguments extends BaseArguments {
    newValues: any;

    constructor(task: Task, fieldNames: string[], newValues: any[]) {
        super(task.id);
        this.values = task;
        this.createNewValues(fieldNames, newValues);
    }
    createNewValues(fieldNames: string[], newValues: any[]): void {
        this.newValues = { };
        for(let i = 0; i < fieldNames.length; i++) {
            const fieldName = fieldNames[i];
            this.newValues[fieldName] = newValues[i];
            Object.defineProperty(this, fieldName, {
                get: () => { return this.newValues[fieldName]; }
            });
        }
    }
}
