import { ModelManipulator } from "../../../../Manipulators/ModelManipulator";
import { TaskPropertyManipulator } from "../../../../Manipulators/Task/Properties/TaskPropertyManipulator";
import { HistoryItem } from "../../HistoryItem";
import { HistoryItemState } from "../../HistoryItemState";

export class TaskPropertiesHistoryItemBase<T> extends HistoryItem {
    oldState: HistoryItemState;
    taskId: string;
    newValue: T;

    constructor(modelManipulator: ModelManipulator, taskId: string, newValue: T) {
        super(modelManipulator);
        this.taskId = taskId;
        this.newValue = newValue;
    }
    public redo(): void {
        this.oldState = this.getPropertiesManipulator().setValue(this.taskId, this.newValue);
    }
    public undo(): void {
        this.getPropertiesManipulator().restoreValue(this.oldState);
    }
    protected getPropertiesManipulator(): TaskPropertyManipulator<T> {
        throw new Error("Not Implemented");
    }
}
